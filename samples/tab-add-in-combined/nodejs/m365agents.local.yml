# yaml-language-server: $schema=https://aka.ms/teams-toolkit/v1.2/yaml.schema.json
# Visit https://aka.ms/teamsfx-v5.0-guide for details on this file
# Visit https://aka.ms/teamsfx-actions for details on actions
version: v1.2

additionalMetadata:
  sampleTag: Microsoft-Teams-Samples:tab-add-in-combined-nodejs

provision:
  - uses: teamsApp/create # Creates a Teams app
    with:
      name: Discounts # Teams app name
    writeToEnvironmentFile: # Write the information of created resources into environment file for the specified environment variable(s).
      teamsAppId: TEAMS_APP_ID
  - uses: script # Set TAB_DOMAIN for local launch
    name: Set TAB_DOMAIN for local launch
    with:
      run: echo "::set-teamsfx-env TAB_DOMAIN=localhost:53000"
  - uses: script # Set TAB_ENDPOINT for local launch
    name: Set TAB_ENDPOINT for local launch
    with:
      run: echo "::set-teamsfx-env TAB_ENDPOINT=https://localhost:53000"
  #- uses: teamsApp/validateManifest # Validate using manifest schema
  #  with:
  #    manifestPath: ./appManifest/manifest.json # Path to manifest template
  - uses: teamsApp/zipAppPackage # Build Teams app package with latest env value
    with:
      manifestPath: ./appManifest/manifest.json # Path to manifest template
      outputZipPath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip
      outputJsonPath: ./appManifest/build/manifest.${{TEAMSFX_ENV}}.json
  - uses: teamsApp/validateAppPackage # Validate app package using validation rules
    with:
      appPackagePath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip # Relative path to this file. This is the path for built zip file.
  - uses: teamsApp/update # Apply the Teams app manifest to an existing Teams app in Developer Portal. Will use the app id in manifest file to determine which Teams app to update.
    with:
      appPackagePath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip # Relative path to this file. This is the path for built zip file.

deploy:
  - uses: devTool/install # Install development tool(s)
    with:
      devCert:
        trust: true
    writeToEnvironmentFile: # Write the information of installed development tool(s) into environment file for the specified environment variable(s).
      sslCertFile: SSL_CRT_FILE
      sslKeyFile: SSL_KEY_FILE

   # Run npm command
  - uses: cli/runNpmCommand
    with:
      workingDirectory: .
      args: install --no-audit

   # Run npm command
  - uses: cli/runNpmCommand
    with:
      workingDirectory: ./tab
      args: install --no-audit

   # Run npm command
  - uses: cli/runNpmCommand
    with:
      workingDirectory: ./add-in
      args: install --no-audit

  - uses: file/createOrUpdateEnvironmentFile # Generate runtime environment variables
    with:
      target: ./.localConfigs
      envs:
        BROWSER: none
        HTTPS: true
        PORT: 53000
        SSL_CRT_FILE: ${{SSL_CRT_FILE}}
        SSL_KEY_FILE: ${{SSL_KEY_FILE}}
