<!DOCTYPE html>
<html lang="en">
    <head>
        <script src="https://unpkg.com/@microsoft/teams-js/dist/MicrosoftTeams.min.js" crossorigin="anonymous"></script>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <script src="https://res.cdn.office.net/teams-js/2.34.0/js/MicrosoftTeams.min.js"
                integrity="sha384-brW9AazbKR2dYw2DucGgWCCcmrm2oBFV4HQidyuyZRI/TnAkmOOnTARSTdps3Hwt"
                crossorigin="anonymous"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
        <script src="./scripts/auth-delegated.js"></script>
        <meta charset="UTF-8">
        <meta http-equiv="Content-Security-Policy" content="default-src *; style-src 'self' 'unsafe-inline' http://localhost:3978; script-src 'self' 'unsafe-inline' 'unsafe-eval'">
    </head>
    <style>
        #mainDiv {
            padding-left: 2%;
            padding-top: 2%;
            padding-right: 2%;
        }
    </style>
</head>

<body id=mainDiv>
    <div>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#createtask">Create Task</a></li>
            <li><a data-toggle="tab" href="#mylist">My Requests</a></li>
            <li><a data-toggle="tab" href="#managerList">My Pending Approvals</a></li>
        </ul>
        <div class="tab-content">
            <div id="createtask" class="tab-pane fade in active">
                <div class="mb">
                    <br />
                    <div class="form-group fg">
                        <label for="title" class="title">Task Title</label>
                        <br>
                        <input type="text" id="taskTitle" name="taskTitle">
                    </div>
                    </br>
                    <div class="form-group fg">
                        <label for="title-desc" class="description">Task Description</label><br>
                        <input type="text" id="taskDescription" name="taskDescription">
                        </br>
                    </div>
                </br>
                    <div class="form-group fg">
                        <label for="request to" class="description">Request to</label><br />
                        <input type="text" readonly id="defaultSelected" name="defaultSelected">
                        <input type="hidden" id="objectId" name="objectId">
                        <button data-id="default" onclick="selectPeople(event,[],false,true)"> Select </button>
                    </div>
                </div>
                <div class="modal-footer mf">
                    </br>
                    <button type="button" class="btn-send save" onclick="return sendNotificationToUser()">Send Notification</button>
                </div>
            </div>
            <div id="mylist" class="tab-pane fade">
                <div id="notask">
                    <span>No records found</span>
                </div>
                <div id="mytask">
                    <h5>List of tasks:</h5>
                    <table border="1" id="task-list-table-user" class="table table-hover">
                        <thead>
                            <tr>
                                <td>Sr No.</td>
                                <td>Task Name</td>
                                <td>Task Description</td>
                                <td>Pending with</td>
                                <td>Status</td>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="managerList" class="tab-pane fade">
                <div id="norequest">
                    <span>No records found</span>
                </div>
                <div id="approverequest">
                    <h5>List of tasks:</h5>
                    <table border="1" id="task-list-table-manager" class="table table-hover">
                        <thead>
                            <tr>
                                <td>Sr No.</td>
                                <td>Task Name</td>
                                <td>Task Description</td>
                                <td>Approve</td>
                                <td>Reject</td>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            microsoftTeams.app.initialize().then(() => {
            });
        });
   
        let aadId;
        microsoftTeams.app.getContext().then(function (context) {
            aadId = context.user.id
        })
   
        // People picker api call.
        function selectPeople(e, setSelected, openOrgWideSearchInChatOrChannel, singleSelect) {
            $("#defaultSelected").empty();
            var id = $(e.currentTarget).attr('data-id');
   
            if (setSelected == "default") {
                setSelected = [aadId];
            }
            microsoftTeams.people.selectPeople({ setSelected: setSelected, openOrgWideSearchInChatOrChannel: openOrgWideSearchInChatOrChannel, singleSelect: singleSelect }).then((people) => {
                if (people) {
                    for (var i = 0; i < people.length; i++) {
                        if (id == "default") {
                            $("#defaultSelected").val(people[i].email)
                            $("#objectId").val(people[i].objectId)
                            $("#defaultSelected").show();
                        }
                    }
   
                }
            });
        }
    </script>
    <script>
        var data =  <%-data%>
        var token = data.token;
        var upn = "";

        $(document).ready(function () {
            microsoftTeams.app.initialize().then(() => {
            });
            
            microsoftTeams.getContext(function (context) {
            upn = context.upn;
            console.log("context is"+JSON.stringify(context));

            if(context.subEntityId != "" && context.subEntityId != undefined ) 
            {
                let taskInfo = {
                title: null,
                size: null,
                url: null,
                card: null,
                fallbackUrl: null,
                completionBotId: null,
            };

            let taskModuleSize = {
                height: 400,
                width: 400,
             };

            taskInfo.url = window.location.origin +"/UserRequest?id="+context.subEntityId;
            taskInfo.title = "View request";
            taskInfo.size = taskModuleSize;

            submitHandler = (err, result) => {
                console.log(`Submit handler - err: ${err}`);
            };
            
            microsoftTeams.dialog.open(taskInfo, submitHandler);
            }
        });
            $('#notask').hide();
            $('#norequest').hide();
        });
       
        var userName = "";
        var createdBy = "";
        var empty = true;

        microsoftTeams.app.getContext().then((context) => {
            createdBy = context.user.userPrincipalName;
            userName = context.user.userPrincipalName;
            taskDetailsForUser(data, createdBy);
            taskDetailsForManager(data, createdBy);
        });

        // show the list of top 10 apps installed in a team
        function taskDetailsForUser(data, createdBy) {
            var list = data.requestDetails;
            var userList = [];
            if(list.length > 0) {
            list.map(item => {
                if(item.createdBy == createdBy){
                userList.push(item);
                }
            })
          }
            if (userList.length == 0) {
                $('#notask').show();
                $('#mytask').hide();
            }
            else {
                var i;
                for (i = 0; i < userList.length; i++) {
                    $('#task-list-table-user').append(`<tr style="padding:1px" >
                    <td style="margin-left:1px"> ${userList[i].id} </td>
                    <td style="margin-left:1px"> ${userList[i].title} </td>
                    <td style="margin-left:1px"> ${userList[i].description} </td>
                    <td style="margin-left:1px"> ${userList[i].assignedTo} </td>
                    <td style="margin-left:1px"> ${userList[i].status} </td>
                </tr>`);
                };
            }
        }

        function taskDetailsForManager(data, createdBy) {
            var list = data.requestDetails;
            var managerList = [];

            if (list.length > 0) {
                list.map(item => {
                    if (item.status == "Pending" && item.assignedTo == createdBy) {
                        managerList.push(item);
                    }
                })
            }

            if (managerList.length == 0) {
                $('#norequest').show();
                $('#approverequest').hide();
            }
            else {
                var i;
                for (i = 0; i < managerList.length; i++) {
                    $('#task-list-table-manager').append(`<tr style="padding:1px" >
                    <td> ${managerList[i].id} </td>
                    <td> ${managerList[i].title} </td>
                    <td> ${managerList[i].description} </td>
                    <td style="padding:5px">  
                        <button type="button" style ="background-color: lightgray" class="btn  btngetApp" data-app-itemid=${managerList[i].id} onclick="ApproveRequest(event)">Approve</button>
                    </td> 
                    <td style="padding:5px">  
                        <button type="button" style ="background-color: lightgray" class="btn btnUpgradeApp" data-app-itemid=${managerList[i].id} onclick="RejectRequest(event)">Reject</button>
                    </td>
                </tr>`);
                };
            }
        }

        function ApproveRequest(e) {
            var taskId = $(e.currentTarget).attr('data-app-itemid');
            let taskInfo = {
                taskId: taskId,
                status: "Approved"
            };
            location.reload();

            $.ajax({
                type: 'POST',
                url: '/ApproveRejectRequest',
                contentType: 'application/json',
                data: JSON.stringify(taskInfo),
                success: function (data, textStatus, jQxhr) {
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log('error', errorThrown);
                }
            });
        };

        function RejectRequest(e) {
            var taskId = $(e.currentTarget).attr('data-app-itemid');
            let taskInfo = {
                taskId: taskId,
                status: "Rejected"
            };
            location.reload();

            $.ajax({
                type: 'POST',
                url: '/ApproveRejectRequest',
                contentType: 'application/json',
                data: JSON.stringify(taskInfo),
                success: function (data, textStatus, jQxhr) {
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log('error', errorThrown);
                }
            });
        };

        function saveRequestDetails(taskInfo) {
            location.reload();

            $.ajax({
                type: 'POST',
                url: '/SaveRequest',
                contentType: 'application/json',
                data: JSON.stringify(taskInfo),
                success: function (data, textStatus, jQxhr) {
                    console.log('success save');
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log('error', errorThrown);
                }
            });
        };

        // Send notification to user.
        function sendNotificationToUser() {
            var isValid = true;
            $('#taskTitle,#taskDescription,#defaultSelected').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            var PersonUerName = $("#defaultSelected").val().trim();
            var userId = $("#objectId").val().trim();

            let taskInfo = {
                id: data.requestDetails.length + 1,
                title: $('#taskTitle').val(),
                description: $('#taskDescription').val(),
                assignedTo: PersonUerName,
                createdBy: createdBy
            };

            $.ajax({
                url: "https://graph.microsoft.com/v1.0/users/" + userId + "/teamwork/installedApps/?$expand=teamsApp",
                type: "GET",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (profile) {
                    appId = getAppId(profile);
                    sendNotification(userId, taskInfo, token, appId);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        };

        // get app id.
        function getAppId(appList) {
            var list = appList.value;
            var i;
            for (i = 0; i < list.length; i++) {
                if (list[i].teamsApp['displayName'] == "Tab Request Approval") {
                    return list[i].teamsApp['id'];
                }
            }
        }

        // Send notification to user.
        function sendNotification(userId, taskInfo, token, appId) {
            var taskID = taskInfo.id;
            var encodedContext = encodeURI('{"subEntityId": '+taskID+'}');
            var url = 'https://teams.microsoft.com/l/entity/'+appId+'/request?context=' + encodedContext;
            alert("url is"+url);
            const postData = {
                "topic": {
                    "source": "text",
                    "value": "Required approval",
                    "webUrl": url
                },
                "activityType": "approvalRequired",
                "previewText": {
                    "content": "New request requires your approval"
                },
                "templateParameters": [
                    {
                        "name": "approvalTaskId",
                        "value": taskInfo.title
                    }
                ]
            };
            
            $.ajax({
                url: "https://graph.microsoft.com/v1.0/users/" + userId + "/teamwork/sendActivityNotification",
                type: "POST",
                data: JSON.stringify(postData),
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (profile) {
                    saveRequestDetails(taskInfo);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    console.log("error" + JSON.stringify(xhr));
                },
            });
        }
    </script>
</body>

</html>