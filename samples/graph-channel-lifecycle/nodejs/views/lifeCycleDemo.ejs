<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Channel lifecycle demo</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://res.cdn.office.net/teams-js/2.34.0/js/MicrosoftTeams.min.js"
        integrity="sha384-brW9AazbKR2dYw2DucGgWCCcmrm2oBFV4HQidyuyZRI/TnAkmOOnTARSTdps3Hwt"
        crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>
    #mainDiv{
        padding-left: 10%;
        padding-top:2%;
    }
</style>
</head>
<body id=mainDiv>
<h4>Channel lifecycle demo</h4>
<br/>

<button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#createChannelModal">Create Channel</button>
<button type="button" class="btn btn-outline-secondary" data-toggle="modal" data-target="#updateChannelModal">Update Channel</button>
<button type="button" class="btn btn-outline-info" id="btngetChannel">Get Channel</button>
<button type="button" class="btn btn-outline-danger" onclick="DeleteChannel()">Delete Channel</button>
<br />
<br />
<!-- simple popup for create channel -->
<div class="modal fade" id="createChannelModal" tabindex="-1" role="dialog" aria-labelledby="createChannelModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createChannelLabel">Create Channel</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="exampleInputEmail1">Name</label>
                    <input type="email" class="form-control" id="txtchannelName" aria-describedby="emailHelp" placeholder="Channel name">
                </div>
                <div class="form-group">
                    <label for="exampleInputPassword1">Description</label>
                    <input type="email" class="form-control" id="txtchannelDesc" aria-describedby="emailHelp" placeholder="Enter Description">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="btnCreateChannel">Create</button>
            </div>
        </div>
    </div>
</div>

<!--simple popup for update channel -->
<div class="modal fade" id="updateChannelModal" tabindex="-1" role="dialog" aria-labelledby="updateChannelModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateChannelLabel">Update Channel</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="exampleInputEmail1">Channel Name</label>
                    <input type="email" class="form-control" id="txtnewName" aria-describedby="emailHelp" placeholder="New Channel name">
                </div>
                <div class="form-group">
                    <label for="exampleInputPassword1">Description</label>
                    <input type="email" class="form-control" id="txtnewDesc" aria-describedby="emailHelp" placeholder="Enter Description">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="btnUpdateChannel">Update</button>
            </div>
        </div>
    </div>
</div>

<!-- simple popup for get channel -->
<div class="modal fade" id="getChannelModal" tabindex="-1" role="dialog" aria-labelledby="getChannelModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="getChannelLabel">Channel details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalbody">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>

<div>

    <h5>List of channels in the Team:</h5>
    <p id="channels"></p>
       
    <br /><br />
    <h5>List of members:</h5>
    <p id="members"></p>
      <br />
    
</div>


<script>
     var token=  <%-token%>;

$(document).ready(function () {
    microsoftTeams.app.initialize();
    microsoftTeams.app.getContext(function(context) { 
    var tenantId=context.tid;
    var teamId=context.groupId;
    console.log("TenantId "+ tenantId);
    console.log("TeamId "+ teamId);        

    getChannelsList(token,teamId);
    getMembersList(token,teamId);
});

function getChannelsList(accessToken,teamId) {            
    $.ajax({
         url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/channels",
         type: "GET",
         beforeSend: function (request) {
                request.setRequestHeader("Authorization", "Bearer " + accessToken);
        },
        success: function (profile) {               
          console.log(profile);
         ListChannels(profile);
       },
        error: function (xhr, textStatus, errorThrown) {
         console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
        },
    });
}

function getMembersList(accessToken,teamId) { 
    $.ajax({
        url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/Members",
        type: "GET",
        beforeSend: function (request) {
            request.setRequestHeader("Authorization", "Bearer " + accessToken);
        },
        success: function (profile) {               
            console.log(profile);
            ListMembers(profile);
        },
        error: function (xhr, textStatus, errorThrown) {
            console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
            },
        });
}

$("#btnCreateChannel").on('click', function (e) {
    microsoftTeams.app.getContext(function (context) {
    var tenantId = context.tid;
    var teamId = context.groupId;
    var cName = $("#txtchannelName").val();
    var cDesc = $("#txtchannelDesc").val();
    e.preventDefault();
    $("#createChannelModal").modal('toggle');
    $('.modal-backdrop').removeClass('modal-backdrop');
    $('.fade').removeClass('fade');
    $('.in').removeClass('in');

    const payload = {displayName: cName,description: cDesc};

            $.ajax({
                url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/channels",
                type: "POST",
                data: JSON.stringify(payload),
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (profile) {               
                    console.log("Channel created");
                
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        })
    })

    $("#btnUpdateChannel").on('click', function (e) {
            microsoftTeams.app.getContext(function (context) {
            var tenantId = context.tid;
            var teamId = context.groupId;
            var channelId = context.channelId;

            var cName = $("#txtnewName").val();
            var cDesc = $("#txtnewDesc").val();
            e.preventDefault();
            $("#updateChannelModal").modal('toggle');
            $('.modal-backdrop').removeClass('modal-backdrop');
            $('.fade').removeClass('fade');
            $('.in').removeClass('in');

            const payload = {displayName: cName,description: cDesc};

            $.ajax({
                url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/channels/"+channelId,
                type: "PATCH",
                data: JSON.stringify(payload),
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (profile) {      
                    console.log(profile);         
                    console.log("Channel updated");
                
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        })
    })

    $("#btngetChannel").on('click', function (e) {
            microsoftTeams.app.getContext(function (context) {
                var tenantId = context.tid;
                var teamId = context.groupId;
                var channelId = context.channelId;
                e.preventDefault();

                $.ajax({
                url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/channels/"+channelId,
                type: "GET",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (response) {
                            $('#getChannelModal').modal('show');
                            $('#modalbody').html("Name :" + response["displayName"]+"<p>"+"Description :" + response["description"]);
                            console.log(response);
                        },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        })
   })
});

    function DeleteChannel(e) {
        alert("This channel is deleting..")
        microsoftTeams.app.initialize();
        microsoftTeams.app.getContext(function (context) {
            var tenantId = context.tid;
            var teamId = context.groupId;
            var channelId = context.channelId;

            $.ajax({
            url: "https://graph.microsoft.com/v1.0/teams/"+teamId+"/channels/"+channelId,
            type: "DELETE",
             beforeSend: function (request) {
                request.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function () {               
                console.log("Channel deleted successfully!");
                
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
            },
        });
        })
    }

    function ListChannels(profile){
        var list=profile.value;

        var text="";
        var i;
        for(i=0;i<list.length;i++)
        {
            text+= list[i].displayName+ "<br>";
        }
        document.getElementById("channels").innerHTML = text;
    }

    function ListMembers(profile){
        var list=profile.value;

        var text="";
        var i;
        for(i=0;i<list.length;i++)
        {
            text+= list[i].displayName+ "<br>";
        }
        document.getElementById("members").innerHTML = text;
    }
</script>
</body>
</html>