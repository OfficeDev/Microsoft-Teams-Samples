@page
@model AppCompleteAuth.Pages.tabModel
@{
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://res.cdn.office.net/teams-js/2.34.0/js/MicrosoftTeams.min.js"
            integrity="sha384-brW9AazbKR2dYw2DucGgWCCcmrm2oBFV4HQidyuyZRI/TnAkmOOnTARSTdps3Hwt"
            crossorigin="anonymous">
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        var facebookAppId = '@Model.FacebookAppId';
        let redirectUri = window.location.origin + "/facebook-auth-end";
        let accessToken;
        let showSSOToggle = false;
        let showFbToggle = false;
        let showUserToggle = false;
        let hostClientType;
        
        $(document).ready(function () {
            microsoftTeams.app.initialize().then(() => {
                microsoftTeams.app.getContext().then((context) => {
                    hostClientType = context.app.host.clientType;
                    if (hostClientType != "web" && hostClientType != "desktop") {
                        $('.card-container-div').removeClass('card-container-div').addClass('card-container-div-mobile');
                    }
                });
            });
        });
        // Tab sso authentication.
        function ssoAuthentication() {
            getClientSideToken()
                .then((clientSideToken) => {
                    return getServerSideToken(clientSideToken);
                })
                .catch((error) => {
                    if (error === "invalid_grant") {
                        // Display in-line button so user can consent
                        $("#divError").text("Please click on consent button");
                        $("#divError").show();
                        $("#consent").show();
                        $("#sso").hide();
                    } else {
                        // Display in-line button so user can consent
                        $("#divError").text("Please click on consent button");
                        $("#divError").show();
                        $("#consent").show();
                        $("#sso").hide();
                    }
                });
        }
        // Get client side token.
        function getClientSideToken() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.getAuthToken()
                    .then((result) => {
                        resolve(result);
                    })
                    .catch((error) => {
                        reject("Error getting token: " + error);
                    });
            });
        }
        // Get server side token and user profile.
        function getServerSideToken(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.app.getContext().then((context) => {
                    var scopes = ["https://graph.microsoft.com/User.Read"];
                    fetch('/GetUserAccessToken', {
                        method: 'get',
                        headers: {
                            "Content-Type": "application/text",
                            "Authorization": "Bearer " + clientSideToken
                        },
                        cache: 'default'
                    })
                        .then((response) => {
                            if (response.ok) {
                                return response.text();
                            } else {
                                reject(response.error);
                            }
                        })
                        .then((responseJson) => {
                            if (responseJson == "") {
                                $("#divError").text("Please click on consent button");
                                $("#divError").show();
                                $("#consent").show();
                                $("#sso").hide();
                            } else {
                                userDetails = JSON.parse(responseJson);
                                let userName = userDetails.User.DisplayName.split(" ");
                                $("#username").append(`${userName[0]}_${userName[1]}  <i class="fa fa-pencil" aria-hidden="true" onclick="ssoUserNameToggle()"></i>`);
                                $("#userImgSso").attr("src", userDetails.Photo);
                                $("#name").append(userDetails.User.DisplayName);
                                $("#email").append(userDetails.User.UserPrincipalName);
                                $("#work").append(userDetails.Title);
                                $("#sso").hide();
                            }
                        });
                });
            });
        }
        // Request consent on implicit grant error.
        function requestConsent() {
            getToken()
                .then(data => {
                    $("#consent").hide();
                    $("#divError").hide();

                    getClientSideToken()
                        .then((clientSideToken) => {
                            return getServerSideToken(clientSideToken);
                        });
                });
        }
        // Get token for multi tenant.
        function getToken() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: window.location.origin + "/auth-start",
                    width: 600,
                    height: 535
                })
                    .then((result) => {
                        resolve(result);
                    })
                    .catch((reason) => {
                        reject(reason);
                    });
            });
        }
        // Authenticate user using credentials.
        function usingCredentials() {
            microsoftTeams.authentication.authenticate({
                url: window.location.origin + "/popUpSignin?from=tab",
                width: 600,
                height: 535
            })
                .then((result) => {
                    $("#sname").append("Test user");
                    $("#semail").append("testaccount@test123.onmicrosoft.com");
                    $("#swork").append("Data scientist");
                    $("#susername").append(`Test_User  <i class="fa fa-pencil" aria-hidden="true" onclick="usingIdUserNameToggle()"></i>`);
                    $("#usingCred").hide();
                })
                .catch((reason) => {
                    console.log(reason);
                });
        }
        // Get user information.
        function getUserInfo(userPrincipleName) {
            if (userPrincipleName) {
                $.ajax({
                    type: 'POST',
                    url: '/GetUserDetails',
                    dataType: 'json',
                    data: {
                        'accessToken': accessToken,
                    },
                    success: function (responseJson) {
                        userDetails = JSON.parse(responseJson);
                        let userName = userDetails.User.DisplayName.split(" ");
                        $("#username").append(`${userName[0]}_${userName[1]}  <i class="fa fa-pencil" aria-hidden="true" onclick="ssoUserNameToggle()"></i>`);
                        $("#sso").hide();
                        $("#userImgSso").attr("src", userDetails.Photo);
                        $("#name").append(userDetails.User.DisplayName);
                        $("#email").append(userDetails.User.UserPrincipalName);
                        $("#work").append(userDetails.Title);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    }
                });
            }
        }
        // Get client side token for facebook.
        function fbAuthentication() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: `https://www.facebook.com/v12.0/dialog/oauth?client_id=${facebookAppId}&redirect_uri=${redirectUri}&state=1234535`,
                    width: 600,
                    height: 535
                })
                    .then((result) => {
                        let data = localStorage.getItem(result);
                        let tokenDetails = JSON.parse(data);
                        localStorage.removeItem(result);
                        resolve(tokenDetails);
                    })
                    .catch((reason) => {
                        reject(reason);
                    })
            });
        }
        // Get face book profile of user.
        function getServerSideTokenFb(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.app.getContext().then((context) => {
                    $.ajax({
                        type: 'POST',
                        url: '/getFbAccessToken',
                        dataType: 'json',
                        data: {
                            'accessToken': clientSideToken,
                        },
                        success: function (responseJson) {
                            facebookProfile = JSON.parse(responseJson);
                            let userName = facebookProfile.name.split(" ");
                            $("#fbusername").append(`${userName[0]}_${userName[1]}  <i class="fa fa-pencil" aria-hidden="true" onclick="fbUserNameToggle()"></i>`);
                            $("#fbname").append(facebookProfile.name);
                            $("#userFbImg").attr("src", facebookProfile.picture);
                            $("#facebook").hide();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                        }
                    });
                });
            });
        }
        // Initiate facebook login.
        function facebookLogin() {
            fbAuthentication()
                .then((result) => {
                    return getServerSideTokenFb(result.idToken);
                })
                .catch((error) => {
                    console.log(error);
                });
        }
        function ssoUserNameToggle() {
            if (!showSSOToggle) {
                $("#sso-username-container").show();
                showSSOToggle = true;
            }
            else if (showSSOToggle) {
                $("#sso-username-container").hide();
                showSSOToggle = false;
            }
        }
        function fbUserNameToggle() {
            if (!showFbToggle) {
                $("#fb-username-container").show();
                showFbToggle = true;
            }
            else if (showFbToggle) {
                $("#fb-username-container").hide();
                showFbToggle = false;
            }
        }
        function usingIdUserNameToggle() {
            if (!showUserToggle) {
                $("#userid-username-container").show();
                showUserToggle = true;
            }
            else if (showUserToggle) {
                $("#userid-username-container").hide();
                showUserToggle = false;
            }
        }
        function ssoUserNameEdit() {
            var userName = $('#userNameInputSSO').val();
            $("#username").empty();
            $("#username").append(`<b>User Name :</b> ${userName} <i class="fa fa-pencil" aria-hidden="true" onclick="ssoUserNameToggle()"></i>`);
            $("#sso-username-container").hide();
            showSSOToggle = false;
        }
        function fbUserNameEdit() {
            var userName = $('#userNameInputFb').val();
            $("#fbusername").empty();
            $("#fbusername").append(`<b>User Name :</b> ${userName} <i class="fa fa-pencil" aria-hidden="true" onclick="fbUserNameToggle()"></i>`);
            $("#fb-username-container").hide();
            showFbToggle = false;
        }
        function usingIdUserNameEdit() {
            var userName = $('#userNameInputId').val();
            $("#susername").empty();
            $("#susername").append(`<b>User Name :</b> ${userName} <i class="fa fa-pencil" aria-hidden="true" onclick="usingIdUserNameToggle()"></i>`);
            $("#userid-username-container").hide();
            showUserToggle = false;
        }
    </script>

    <style>
        h3 {
            text-align: center;
            margin-top: 0.5rem;
        }

        button {
            margin-left: 36rem;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 30rem;
            height: 12rem;
            margin-left: 2rem;
            margin-top: 0.5rem;
        }

            .card:hover {
                box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
            }

        .container {
            padding: 2px 2px;
            display: flex;
        }

        img {
            border-radius: 50%;
        }

        .profile {
            margin-top: 1rem;
            margin-left: 2rem;
            max-width: 30rem;
            align-content: flex-start;
        }

        #fb-username-btn, #sso-username-btn, #userid-username-btn {
            margin-left: 2rem;
            margin-bottom: 1rem;
        }

        .btn-outline-info {
            margin-left: 19rem;
            max-width: 10rem;
        }

        .signin-header {
            margin-left: 2rem;
            margin-top: 1rem;
        }

        .card-container-div {
            margin-left: 30%;
            padding-bottom: 2rem;
        }

        .card-container-div-mobile {
            margin-left: 1%;
            padding-bottom: 2rem;
        }

        #divError {
            margin-left: 1rem
        }
    </style>

</head>
<body class="theme-light">
    <div class="surface">
        <h3> Welcome to App complete auth sample</h3>
        <div class="card-container-div">
            <div>
                <div class="signin-header"><b>1) Sign in using AAD SSO</b></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             alt="Avatar" id="userImgSso" width="100px" height="100px">
                        <div class="profile">
                            <span id="name"><b>Name: </b></span><br>
                            <span id="username"><b>User name: </b></span><br>
                            <span id="email"><b>Email: </b></span></span><br>
                            <span id="work"><b>Work: </b></span></span>
                            <div id="sso-username-container" style="display: none">
                                <input id="userNameInputSSO" type="text">
                                <button id="sso-username-btn" type="button" class="btn btn-outline-info" onclick="ssoUserNameEdit()">edit</button>
                            </div>
                        </div>
                    </div>
                    <div id="divError" style="display: none"></div>
                    <button type="button" class="btn btn-outline-info" onclick="requestConsent()" id="consent"
                            style="display:none;">
                        Consent
                    </button>
                    <button type="button" class="btn btn-outline-info" onclick="ssoAuthentication()" id="sso">
                        Get
                        Details
                    </button>
                </div>
            </div>
            <div>
                <div class="signin-header"><b>2) Sign in using Facebook (OAuth 2)</b></div>
                <div id="divError" style="display: none"></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             alt="Avatar" id="userFbImg" width="100px" height="100px">
                        <div class="profile">
                            <span id="fbname"><b>Name: </b></span><br>
                            <span id="fbusername"><b>User name: </b></span><br>
                            <div id="fb-username-container" style="display: none">
                                <input id="userNameInputFb" type="text">
                                <button id="fb-username-btn" type="button" class="btn btn-outline-info" onclick="fbUserNameEdit()">edit</button>
                            </div>
                        </div>
                    </div>
                    <button type="button" id="facebook" class="btn btn-outline-info" onclick="facebookLogin()">Login</button>
                </div>
            </div>
            <div>
                <div class="signin-header"><b>3) Sign in using id/password</b></div>
                <div id="divError" style="display: none"></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             id="userImgId" alt="Avatar" width="100px" height="100px">
                        <div class="profile">
                            <span id="sname"><b>Name: </b></span><br>
                            <span id="susername"><b>User name: </b></span><br>
                            <span id="semail"><b>Email: </b></span><br>
                            <span id="swork"><b>Work: </b></span>
                            <div id="userid-username-container" style="display: none">
                                <input id="userNameInputId" type="text">
                                <button id="userid-username-btn" type="button" class="btn btn-outline-info" onclick="usingIdUserNameEdit()">edit</button>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" id="usingCred" onclick="usingCredentials()">Login</button>
                </div>
            </div>
        </div>
    </div>
</body>