<!DOCTYPE html>
<html lang="en">

<head>

    <head>
        <script src="https://res.cdn.office.net/teams-js/2.34.0/js/MicrosoftTeams.min.js"
                integrity="sha384-brW9AazbKR2dYw2DucGgWCCcmrm2oBFV4HQidyuyZRI/TnAkmOOnTARSTdps3Hwt"
                crossorigin="anonymous"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="./scripts/auth-delegated.js"></script>
        <meta charset="UTF-8">
        <meta http-equiv="Content-Security-Policy"
            content="default-src *; style-src 'self' 'unsafe-inline' http://localhost:3978; script-src 'self' 'unsafe-inline' 'unsafe-eval'">
    </head>
    <style>
        #mainDiv {
            padding-left: 10%;
            padding-top: 2%;
        }
    </style>
</head>

<body id=mainDiv>
    <div id="login">
        <h4>Click on login button to continue</h4>
        <button onclick="login()">Login</button>
    </div>
    <button onclick="requestConsent()" id="consent" style="display: none">Consent</button>
    <div id="feed-container" style="display: none">
        <div class="radioClass">
            <label><input type="radio" name="notificationRadio" value="sendNotificationChannel" checked> Send
                Notification To
                User in Channel</label></br>
            <label><input type="radio" name="notificationRadio" value="customTopicNotificationChannel"> Send
                Notification with Custom Topic in Channel</label></br>
            <label><input type="radio" name="notificationRadio" value="notificationChannelTab"> Notify User about a
                channel Tab</label>
        </div></br>
        <div class="sendNotificationChannel desc">
            <div class="mb">
                <div class="form-group fg">
                    <label for="title" class="title">Task Title</label>
                    </br>
                    <input type="text" id="taskTitle" name="taskTitle">
                </div>
                <div class="form-group fg">
                    </br>
                    <label for="title-desc" class="description">Task Description</label>
                    </br>
                    <input type="text" id="taskDescription" name="taskDescription">
                </div>
            </div>
            <div class="modal-footer mf">
                </br>
                <button type="button" class="btn-send save" onclick="return sendNotificationToChannel()">Send
                    Notification to Channel</button>
            </div>
        </div>
        <div class="customTopicNotificationChannel desc">
            <div class="mb">
                <div class="form-group fg">
                    <label for="DeployementTitle" class="DeployementTitle">Deployment Title</label>
                    </br>
                    <input type="text" id="DeployementTitle" name="DeployementTitle">
                </div>
                <div class="form-group fg">
                    </br>
                    <label for="deployment-desc" class="DeploymentDescription">Deployment Description</label>
                    </br>
                    <input type="text" id="DeploymentDescription" name="DeploymentDescription">
                </div>
            </div>
            <div class="modal-footer mf">
                </br>
                <button type="button" class="btn-send save" onclick="return customTopicTeamNotification()">Notify with
                    Custom Topic in Channel</button>
            </div>
        </div>
        <div class="notificationChannelTab desc">
            <div class="mb">
                <div class="form-group fg">
                    </br>
                    <label for="reservationId" class="reservationId">ID</label>
                    </br>
                    <input type="text" id="reservationId" name="reservationId">
                </div>
                <div class="form-group fg">
                    </br>
                    <label for="reservationTitle" class="reservationTitle">Reservation Title</label>
                    </br>
                    <input type="text" id="reservationTitle" name="reservationTitle">
                </div>
                <div class="form-group fg">
                    </br>
                    <label for="currentSlot-desc" class="currentSlot">Current Slot</label>
                    </br>
                    <input type="text" id="currentSlot" name="currentSlot">
                </div>
            </div>
            <div class="modal-footer mf">
                </br>
                <button type="button" class="btn-send save" onclick="return channelTabTeamNotification()">Notify User
                    for channel Tab</button>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            $(".customTopicNotificationChannel").hide();
            $(".notificationChannelTab").hide();
            $('input[type="radio"]').click(function () {
                var inputValue = $(this).attr("value");
                var targetBox = $("." + inputValue);
                $(".desc").not(targetBox).hide();
                $(targetBox).show();
            });
        });

        var userId;
        var teamId;
        var channelId;

        microsoftTeams.app.initialize().then(() => {
            microsoftTeams.app.getContext().then((context) => {
                userId = context.user.id;
                teamId = context.team.groupId;
                channelId = context.channel.id;
            });
        });

        var empty = true;
        $('input[type="text"]').each(function () {
            if ($(this).val() != "") {
                empty = false;
                return false;
            }
        });

        // send notification to channel in a team for task creation.
        function sendNotificationToChannel() {
            var isValid = true;
            $('#taskTitle,#taskDescription').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });

            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            let taskDetails  = {
                title: $('#taskTitle').val(),
                description: $('#taskDescription').val(),
                userId: userId,
                teamId: teamId
            };

            $.ajax({
                url: "/sendNotificationToChannel",
                type: "POST",
                contentType: 'application/json',
                data: JSON.stringify(taskDetails ),
                success: function (profile) {
                    console.log(profile);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log(xhr)
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        };

        // send notification for channel tab.
        function channelTabTeamNotification() {
            var isValid = true;
            $('#reservationId,#reservationTitle,#currentSlot').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });

            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            let taskDetails  = {
                id: $('#reservationId').val(),
                title: $('#reservationTitle').val(),
                currentSlot: $('#currentSlot').val(),
                userId: userId,
                teamId: teamId,
                channelId: channelId,
            };

            $.ajax({
                url: "/channelTabTeamNotification",
                type: "POST",
                contentType: 'application/json',
                data: JSON.stringify(taskDetails ),
                success: function (profile) {
                    console.log(profile);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log(xhr)
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        }

        // Send notification for custom topic in team.
        function customTopicTeamNotification() {
            var isValid = true;
            $('#DeployementTitle,#DeployementDescription').each(function (e) {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });

            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            let taskDetails  = {
                title: $('#DeployementTitle').val(),
                description: $('#DeployementDescription').val(),
                userId: userId,
                teamId: teamId,
                channelId: channelId
            };

            $.ajax({
                url: "/customTopicTeamNotification",
                type: "POST",
                contentType: 'application/json',
                data: JSON.stringify(taskDetails ),
                success: function (profile) {
                    console.log(profile);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log(xhr)
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                },
            });
        };
    </script>
</body>

</html>