@model TabActivityFeed.Model.TaskDetails
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="~/css/chatnotification.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    @*<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">*@
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/js/select2.min.js"></script>
    <title>Screen</title>
    <script>
        $(document).ready(function () {
          microsoftTeams.app.initialize().then(() => {
            $('input[type="radio"]').click(function () {
                var inputValue = $(this).attr("value");
                var targetBox = $("." + inputValue);
                $(".desc").not(targetBox).hide();
                $(targetBox).show();
            });
          });
        });

        microsoftTeams.app.initialize();

        var token = localStorage.getItem("accessToken");
        var username = "";
        var userId = "";
        var groupchatId = "";

        microsoftTeams.app.getContext().then((context) => {
            groupchatId = context.chat.id;
            username = context.user.userPrincipalName;
            userId = context.user.id;

        });

        var empty = true;

        $('input[type="text"]').each(function () {
            if ($(this).val() != "") {
                empty = false;
                return false;
            }
        });

        function SendNotificationToGroupChat() {
            var isValid = true;

            $('#title,#description').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });

            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            var action = "EntityTopic";
            let taskDetails = {
                title: $('#title').val(),
                description: $('#description').val(),
                userName: username,
                taskInfoAction: action,
                access_token: token,
                chatId: groupchatId,
            };

            $.ajax({
                type: 'POST',
                url: '/SendNotificationToGroupChat',
                dataType: 'json',
                data: taskDetails
            });

            return true;
        };

        function customTopicNotification() {
            var isValid = true;

            $('#DeployementTitle,#DeploymentDescription').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                        "background": ""
                    });
                }
            });

            if (isValid == false) {
                e.preventDefault();
                return false;
            }

            var action = "customTopic";
            let taskDetails = {
                DeployementTitle: $('#DeployementTitle').val(),
                DeploymentDescription: $('#DeploymentDescription').val(),
                taskInfoAction: action,
                userName: username,
                access_token: token,
                chatId: groupchatId,
            };

            $.ajax({
                type: 'POST',
                url: '/SendNotificationToGroupChat',
                dataType: 'json',
                data: taskDetails
            });

            return true;
        };

    </script>
</head>

<body>
    <div id="login">
        <h4>Click on login button to continue</h4>
        <button onclick="login()">Login</button>
    </div>
    <button onclick="requestConsent()" id="consent" style="display: none">Consent</button>
    <div id="divGraphProfile" style="display: none"></div>
    <h4 id="successMsg"></h4>
    <div id="feed-container" style="display: none;">

        <div class="radioClass">
            <label style="color:black"><input type="radio" name="notificationRadio" value="sendNotificationGroupChat"> Send Notification To User Group Chat</label></br>
            <label style="color:black"><input type="radio" name="notificationRadio" value="customTopicNotificationChat"> Send Notification with Custom Topic</label>
        </div></br>
        <div class="sendNotificationGroupChat desc">
            <div class="mb">
                <input type="text" class="tk-no" id="taskNumber" value="@ViewBag.taskId" disabled>
                <div class="input-grp">
                </div>
                <div class="form-group fg">
                    <label for="title" class="title" style="color:black">Task Title</label>
                    @Html.TextBoxFor(model => model.title, htmlAttributes: new { @class = "form-control", @id = "title" })
                </div>
                <div class="form-group fg">
                    <label for="title-desc" class="description" style="color:black">Task Description</label>
                    @Html.TextAreaFor(model => model.description, htmlAttributes: new { @class = "form-control title-desc", @id = "description" })
                    @Html.ValidationMessageFor(model => model.title)
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return SendNotificationToGroupChat()">Send Notification to Chat</button>
            </div>
        </div>
        <div class="customTopicNotificationChat desc">
            <div class="mb">
                <input type="text" class="tk-no" id="deploymentId" value="@ViewBag.taskId" disabled>
                <div class="input-grp">
                </div>
                <div class="form-group fg">
                    <label for="DeployementTitle" class="DeployementTitle" style="color:black">Deployment Title</label>
                    @Html.TextBoxFor(model => model.DeployementTitle, htmlAttributes: new { @class = "form-control", @id = "DeployementTitle" })
                </div>
                <div class="form-group fg">
                    <label for="deployment-desc" class="DeploymentDescription" style="color:black">Deployment Description</label>
                    @Html.TextAreaFor(model => model.DeploymentDescription, htmlAttributes: new { @class = "form-control deployment-desc", @id = "DeploymentDescription" })
                    @Html.ValidationMessageFor(model => model.title)
                </div>
            </div>
            <div class="modal-footer mf">
                <button type="button" class="btn-send save" onclick="return customTopicNotification()">Notify with Custom Topic</button>
            </div>
        </div>
    </div>

    @Html.Partial("Details")

</body>

</html>