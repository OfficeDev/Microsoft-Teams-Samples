# yaml-language-server: $schema=https://aka.ms/teams-toolkit/v1.2/yaml.schema.json
# Visit https://aka.ms/teamsfx-v5.0-guide for details on this file
# Visit https://aka.ms/teamsfx-actions for details on actions
version: v1.2

additionalMetadata:
  sampleTag: Microsoft-Teams-Samples:bot-ai-enterprise-search-nodejs

provision:
  # Creates a Teams app
  - uses: teamsApp/create
    with:
      # Teams app name
      name: AI-EnterpriseSearch${{APP_NAME_SUFFIX}}
    # Write the information of created resources into environment file for
    # the specified environment variable(s).
    writeToEnvironmentFile: 
      teamsAppId: TEAMS_APP_ID

  # Create or reuse an existing Azure Active Directory application for bot.
  - uses: botAadApp/create
    with:
      # The Azure Active Directory application's display name
      name: AI-EnterpriseSearch${{APP_NAME_SUFFIX}}
    writeToEnvironmentFile:
      # The Azure Active Directory application's client id created for bot.
      botId: BOT_ID
      # The Azure Active Directory application's client secret created for bot.
      botPassword: SECRET_BOT_PASSWORD 

  # Create or update the bot registration on dev.botframework.com
  - uses: botFramework/create
    with:
      botId: ${{BOT_ID}}
      name: AI-EnterpriseSearch
      messagingEndpoint: ${{BOT_ENDPOINT}}/api/messages
      description: ""
      channels:
        - name: msteams

  # Validate using manifest schema
  - uses: teamsApp/validateManifest
    with:
      # Path to manifest template
      manifestPath: ./appManifest/manifest.json

  # Build Teams app package with latest env value
  - uses: teamsApp/zipAppPackage
    with:
      # Path to manifest template
      manifestPath: ./appManifest/manifest.json
      outputZipPath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip
      outputJsonPath: ./appManifest/build/manifest.${{TEAMSFX_ENV}}.json
  # Validate app package using validation rules
  - uses: teamsApp/validateAppPackage
    with:
      # Relative path to this file. This is the path for built zip file.
      appPackagePath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip

  # Apply the Teams app manifest to an existing Teams app in
  # Developer Portal.
  # Will use the app id in manifest file to determine which Teams app to update.
  - uses: teamsApp/update
    with:
      # Relative path to this file. This is the path for built zip file.
      appPackagePath: ./appManifest/build/appManifest.${{TEAMSFX_ENV}}.zip

deploy:
  # Run npm command
  - uses: cli/runNpmCommand
    with:
      args: install --no-audit

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./.localConfigs
      envs:
        BOT_ID: ${{BOT_ID}}
        BOT_PASSWORD: ${{SECRET_BOT_PASSWORD}}
        SECRET_AZURE_OPENAPI_KEY: ${{SECRET_AZURE_OPENAPI_KEY}}
        COMPLETION_MODEL_URL: ${{COMPLETION_MODEL_URL}}
        REDIS_CONNECTION: ${{REDIS_CONNECTION}}
        EMBEDDING_MODEL_URL: ${{EMBEDDING_MODEL_URL}}
        AZURE_STORAGE_CONNECTION_STRING: ${{AZURE_STORAGE_CONNECTION_STRING}}