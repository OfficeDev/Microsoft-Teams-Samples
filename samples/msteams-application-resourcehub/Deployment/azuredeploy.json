{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseResourceName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "The base name to use for the resources that will be provisioned."
      }
    },
    "botClientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
      }
    },
    "botClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The client secret of the bot Azure AD app."
      }
    },
    "appDisplayName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "The app (and bot) display name."
      }
    },
    "appDescription": {
      "type": "string",
      "defaultValue": "App description",
      "minLength": 1,
      "metadata": {
        "description": "App description"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "The ID of the tenant to which the app will be deployed. Enter the tenant Id of AAD app registered"
      }
    },
    "upn": {
      "type": "string",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "Comma seperated UPN ids."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the name of the app service/hosting plan for web/bot App."
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "hostingPlanSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "2",
      "metadata": {
        "description": "The size of the hosting plan (small, medium, or large)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "primaryRegion": {
      "type": "string",
      "defaultValue": "WESTUS",
      "metadata": {
        "description": "The primary replica region for the blob storage account."
      }
    },
    "keyVaultName": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "storageAccountName": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the name of the storage account."
      }
    },
    "botName": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the name of bot appservice name."
      }
    },
    "botAppInsightsName": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "The name of app insights for web/ bot app to be deployed."
      }
    },
    "azureSearchSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "free",
        "standard",
        "standard2"
      ],
      "metadata": {
        "description": "The azure search instance tier."
      }
    },
    "bingSearchSubscriptionKey": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the value of bing search subscription key."
      }
    },
    "bingSearchEndpoint": {
      "type": "String",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the value of bing search End point."
      }
    },
    "allowedTenants": {
      "type": "String",
      "defaultValue": "*",
      "metadata": {
        "description": "Specifies the value of Allowed Tenants in App service."
      }
    }
  },
  "variables": {
    "botName": "[parameters('botName')]",
    "botAppDomain": "[concat(parameters('baseResourceName'), '.azurewebsites.net')]",
    "botAppUrl": "[concat('https://', variables('botAppDomain'))]",
    "hostingPlanName": "[parameters('hostingPlanName')]",
    "storageAccountName": "[parameters('storageAccountName')]",
    "appInsightsName": "[parameters('botAppInsightsName')]",
    "sharedSkus": [
      "Free",
      "Shared"
    ],
    "isSharedPlan": "[contains(variables('sharedSkus'), parameters('hostingPlanSku'))]",
    "skuFamily": "[if(equals(parameters('hostingPlanSku'), 'Shared'), 'D', take(parameters('hostingPlanSku'), 1))]",
    "keyVaultUrl": "[concat('https://',parameters('keyVaultName'), '.vault.azure.net')]",
    "consistencyPolicy": {
      "Eventual": {
        "defaultConsistencyLevel": "Eventual"
      },
      "ConsistentPrefix": {
        "defaultConsistencyLevel": "ConsistentPrefix"
      },
      "Session": {
        "defaultConsistencyLevel": "Session"
      },
      "BoundedStaleness": {
        "defaultConsistencyLevel": "BoundedStaleness",
        "maxStalenessPrefix": "100000",
        "maxIntervalInSeconds": "300"
      },
      "Strong": {
        "defaultConsistencyLevel": "Strong"
      }
    },
    "locations": [
      {
        "locationName": "[parameters('primaryRegion')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'), '1'), concat(variables('skuFamily'), parameters('hostingPlanSize')))]",
        "tier": "[parameters('hostingPlanSku')]",
        "size": "[concat(variables('skuFamily'), parameters('hostingPlanSize'))]",
        "family": "[variables('skuFamily')]",
        "capacity": 0
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('baseResourceName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[parameters('baseResourceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "enabled": true,
        "reserved": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": "[not(variables('isSharedPlan'))]",
          "appSettings": [
            {
              "name": "MicrosoftAppId",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultUrl'), '/secrets/', 'MicrosoftAppId', ')')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultUrl'), '/secrets/', 'MicrosoftAppPassword', ')')]"
            },
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/"
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('botClientSecret')]"
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('botClientId')]"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[concat('api://', variables('botAppDomain'),'/', parameters('botClientId'))]"
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/', parameters('tenantId'),'/v2.0,https://sts.windows.net/', parameters('tenantId'), '/')]"
            },
            {
              "name": "BingSearch:BingSearchEndpoint",
              "value": "[parameters('bingSearchEndpoint')]"
            },
            {
              "name": "BingSearch:BingSearchSubscriptionKey",
              "value": "[parameters('bingSearchSubscriptionKey')]"
            },
            {
              "name": "StorageConnectionString",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=', variables('keyVaultUrl'), '/secrets/', 'StorageConnectionString', ')')]"
            },
            {
              "name": "Logging:LogLevel:Default",
              "value": "Information"
            },
            {
              "name": "Logging:LogLevel:Microsoft",
              "value": "Warning"
            },
            {
              "name": "Logging:LogLevel:Microsoft.Hosting.Lifetime",
              "value": "Information"
            },
            {
              "name": "ApplicationInsights:InstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsights:LogLevel:Default",
              "value": "Information"
            },
            {
              "name": "ApplicationInsights:LogLevel:Microsoft",
              "value": "Information"
            },
            {
              "name": "App:AppBaseUri",
              "value": "[variables('botAppUrl')]"
            },
            {
              "name": "App:ProfileImageCacheDurationInMinutes",
              "value": "60"
            },
            {
              "name": "AllowedHosts",
              "value": "*"
            },
            {
              "name": "DisableTenantFilter",
              "value": "false"
            },
            {
              "name": "AllowedTenants",
              "value": "[parameters('allowedTenants')]"
            },
            {
              "name": "RetryPolicy:medianFirstRetryDelay",
              "value": "1000"
            },
            {
              "name": "RetryPolicy:retryCount",
              "value": "2"
            },
            {
              "name": "AdminSettings:UPN",
              "value": "[parameters('upn')]"
            }
          ],
          "cors": {
            "supportCredentials": true,
            "allowedOrigins": []
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('baseResourceName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "apiVersion": "2018-07-12",
      "name": "[parameters('botName')]",
      "type": "Microsoft.BotService/botServices",
      "location": "global",
      "sku": {
        "name": "F0"
      },
      "kind": "sdk",
      "properties": {
        "displayName": "[parameters('appDisplayName')]",
        "description": "[parameters('appDescription')]",
        "msaAppId": "[parameters('botClientId')]",
        "endpoint": "[concat(variables('botAppUrl'), '/api/messages')]",
        "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
      },
      "resources": [
        {
          "name": "[concat(parameters('botName'), '/MsTeamsChannel')]",
          "type": "Microsoft.BotService/botServices/channels",
          "apiVersion": "2018-07-12",
          "location": "global",
          "sku": {
            "name": "F0"
          },
          "properties": {
            "channelName": "MsTeamsChannel",
            "location": "global",
            "properties": {
              "isEnabled": true
            }
          },
          "dependsOn": [
            "[concat('Microsoft.BotService/botServices/', parameters('botName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('baseResourceName'))]"
      ],
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "true",
        "enabledForTemplateDeployment": "true",
        "enabledForDiskEncryption": "true",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[reference(resourceId('Microsoft.Web/sites', parameters('baseResourceName')), '2018-02-01', 'Full').identity.tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('baseResourceName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ]
            }
          }
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2018-02-14",
      "name": "[concat(parameters('keyVaultName'), '/', 'MicrosoftAppId')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('botClientId')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('keyVaultName'), '/', 'MicrosoftAppPassword')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('botClientSecret')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(parameters('keyVaultName'), '/', 'StorageConnectionString')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
      }
    }
  ],
  "outputs": {
    "botId": {
      "type": "string",
      "value": "[parameters('botClientId')]"
    },
    "appDomain": {
      "type": "string",
      "value": "[variables('botAppDomain')]"
    }
  }
}